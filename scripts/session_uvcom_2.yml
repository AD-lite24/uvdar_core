name: simulation
root: ./
startup_window: swarm_line 
# pre_window: export RUN_TYPE=simulation; export UAV_TYPE=f450; export WORLD_NAME=simulation; export ODOMETRY_TYPE=gps
pre_window: export RUN_TYPE=simulation; export UAV_TYPE=f450; export WORLD_NAME=simulation; export ODOMETRY_TYPE=gps; export SENSORS="garmin_down"
windows:
  - roscore:
      layout: even-vertical
      panes:
        - roscore
  - gazebo:
      layout: even-vertical
      panes:
        - waitForRos; export __NV_PRIME_RENDER_OFFLOAD=1; export __GLX_VENDOR_LIBRARY_NAME=nvidia;  roslaunch mrs_simulation simulation.launch world_name:=grass_plane gui:=true #debug:=true
        
        # - waitForRos; roslaunch mrs_simulation mrs_drone_spawner.launch
        # - export WORLD_FILE=./world.yaml; export GAZEBO_MODEL_PATH=~/horynjir/src/scs_swarm/models:${GAZEBO_MODEL_PATH}; export GAZEBO_RESOURCE_PATH=~/horynjir/src/scs_swarm/models:${GAZEBO_RESOURCE_PATH}; waitForRos; roslaunch scs_swarm swarm_gz_grass.launch gui:=true
        
  - status:
      layout: even-vertical
      panes:
        - export UAV_NAME=uav1; waitForRos; roslaunch mrs_uav_status status.launch
        - export UAV_NAME=uav2; waitForRos; roslaunch mrs_uav_status status.launch
        - export UAV_NAME=uav3; waitForRos; roslaunch mrs_uav_status status.launch
  - spawn:
      layout: even-vertical
      panes:
        # - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "1 2 3 4 $UAV_TYPE --enable-rangefinder" -30,16 -38,16 -34,23 -34,10
        - waitForSimulation; sleep 1; rosservice call /mrs_drone_spawner/spawn "1 $UAV_TYPE --pos -29 15 0.5 0.785 --enable-rangefinder --enable-ground-truth --enable-uv-leds --uvled_s_l 0 --uvled_s_r 0 --enable-dual-uv-cameras --enable-back-uv-camera --uvcam_calib_file \"$(rospack find uvdar_core)/include/OCamCalib/config/calib_results_bf_uv_fe.txt\""
        - waitForSimulation; sleep 1; rosservice call /mrs_drone_spawner/spawn "2 $UAV_TYPE --pos -37 15 0.5 -0.785 --enable-rangefinder --enable-ground-truth --enable-uv-leds --uvled_s_l 1 --uvled_s_r 1 --enable-dual-uv-cameras --enable-back-uv-camera --uvcam_calib_file \"$(rospack find uvdar_core)/include/OCamCalib/config/calib_results_bf_uv_fe.txt\""
        - waitForSimulation; sleep 1; rosservice call /mrs_drone_spawner/spawn "3 $UAV_TYPE --pos -33 20 0.5 -0.785 --enable-rangefinder --enable-ground-truth --enable-uv-leds --uvled_s_l 2 --uvled_s_r 2 --enable-dual-uv-cameras --enable-back-uv-camera --uvcam_calib_file \"$(rospack find uvdar_core)/include/OCamCalib/config/calib_results_bf_uv_fe.txt\""

  - control:
      layout: even-vertical
      panes:
        - export UAV_NAME=uav1; waitForOdometry; sleep 1; roslaunch mrs_uav_general core.launch 
        - export UAV_NAME=uav2; waitForOdometry; sleep 1; roslaunch mrs_uav_general core.launch
        - export UAV_NAME=uav3; waitForOdometry; sleep 1; roslaunch mrs_uav_general core.launch
  - autostart:
      layout: even-vertical
      panes:
        - export UAV_NAME=uav1; waitForSimulation; sleep 1; roslaunch mrs_uav_general automatic_start.launch
        - export UAV_NAME=uav2; waitForSimulation; sleep 1; roslaunch mrs_uav_general automatic_start.launch
        - export UAV_NAME=uav3; waitForSimulation; sleep 1; roslaunch mrs_uav_general automatic_start.launch
  - takeoff:
      layout: even-vertical
      panes:
        - 'export UAV_NAME=uav1;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 0.1;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        - 'export UAV_NAME=uav2;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 0.1;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        - 'export UAV_NAME=uav3;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 0.1;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # #}
#  - rviz:
#      layout: even-vertical
#      panes:
#        - export UAV_NAME=uav1; waitForControl; roslaunch uvdar_core multi_frequency_test_rviz.launch
  - uv_observer:
      layout: even-vertical
      panes:
        - waitForCompile; gz world --pause=0; sleep 5;  export UAV_NAME=uav1; waitForControl; roslaunch uvdar_core uvdar_observer.launch
        - waitForCompile; gz world --pause=0; sleep 5;  export UAV_NAME=uav2; waitForControl; roslaunch uvdar_core uvdar_observer.launch
        - waitForCompile; gz world --pause=0; sleep 5;  export UAV_NAME=uav3; waitForControl; roslaunch uvdar_core uvdar_observer.launch
  - kalman_filter:
      layout: even-vertical
      panes:
        - export UAV_NAME=uav1; waitForControl; sleep 10; roslaunch uvdar_core uvdar_kalman.launch output_frame:=$UAV_NAME/local_origin
        - export UAV_NAME=uav2; waitForControl; sleep 10; roslaunch uvdar_core uvdar_kalman.launch output_frame:=$UAV_NAME/local_origin
        - export UAV_NAME=uav3; waitForControl; sleep 10; roslaunch uvdar_core uvdar_kalman.launch output_frame:=$UAV_NAME/local_origin
  - led_manager:
      layout: even-vertical
      panes:
        - export UAV_NAME=uav1; waitForControl; sleep 1; roslaunch uvdar_core led_manager.launch
        - export UAV_NAME=uav2; waitForControl; sleep 1; roslaunch uvdar_core led_manager.launch
        - export UAV_NAME=uav3; waitForControl; sleep 1; roslaunch uvdar_core led_manager.launch
  - swarm_rx:
      layout: even-vertical
      panes:
        - export UAV_NAME=uav1; export UAV_ID=0; waitForControl; sleep 8; roslaunch uvdar_core uvdar_rx.launch
        - export UAV_NAME=uav2; export UAV_ID=1; waitForControl; sleep 8; roslaunch uvdar_core uvdar_rx.launch
        - export UAV_NAME=uav3; export UAV_ID=2; waitForControl; sleep 8; roslaunch uvdar_core uvdar_rx.launch
  - swarm_tx:
      layout: even-vertical
      panes:
        - export UAV_NAME=uav1; export UAV_ID=0; waitForControl; sleep 5; roslaunch uvdar_core uvdar_tx.launch
        - export UAV_NAME=uav2; export UAV_ID=1; waitForControl; sleep 5; roslaunch uvdar_core uvdar_tx.launch
        - export UAV_NAME=uav3; export UAV_ID=2; waitForControl; sleep 5; roslaunch uvdar_core uvdar_tx.launch
  - swarm_line:
      layout: even-vertical
      panes:
        - export UAV_NAME=uav1; export USE_GPS=true; export USE_RADIO=false; export INFO=true; waitForControl; sleep 5; roslaunch swarm_controller scs_swarm.launch
        - export UAV_NAME=uav2; export USE_GPS=true; export USE_RADIO=false; waitForControl; sleep 5; roslaunch swarm_controller scs_swarm.launch
        - export UAV_NAME=uav3; export USE_GPS=true; export USE_RADIO=false; waitForControl; sleep 5; roslaunch swarm_controller scs_swarm.launch
        # - export UAV_NAME=uav3; export USE_GPS=false; export USE_RADIO=true; waitForControl; sleep 5; roslaunch swarm_controller scs_swarm.launch
  - slow_down:
      layout: even-vertical
      panes:
        - waitForSimulation; waitForRos; sleep 25; gz physics -u 100
        - waitForSimulation; waitForRos; sleep 35; gz physics -u 100
        - waitForSimulation; waitForRos; sleep 55; gz physics -u 100
  - goto:
      layout: even-vertical
      panes:
        - 'history -s rosservice call /uav3/control_manager/goto_fcu \"goal: \[0.0, 0.0, 0.0, 0.7\]\"'
